diff --git a/index.html b/index.html
index ec1a219..b6b8e82 100644
--- a/index.html
+++ b/index.html
@@ -5,7 +5,7 @@
     <meta charset="UTF-8" />
     <link rel="icon" href="/favicon.ico" />
     <meta name="viewport" content="width=device-width, initial-scale=1.0" />
-    <title>Tutorial Application</title>
+    <title>Album</title>
 </head>
 
 <body>
diff --git a/src/App.vue b/src/App.vue
index 7d326d4..64cdbd3 100644
--- a/src/App.vue
+++ b/src/App.vue
@@ -1,55 +1,42 @@
 <template>
-    <v-app>
-      <v-app-bar  >
-            <v-img
-                class="mx-2"
-                :src="logo"
-                max-height="40"
-                max-width="40"
-                contain
-            ></v-img>
-            <v-app-bar-title  >Tutorial</v-app-bar-title>
-            <v-spacer></v-spacer>
-            <v-toolbar-items>
-                <v-btn 
-                    variant="text"
-                    @click="goList"
-                    >
-                  List
-                </v-btn>
-                <v-btn 
-                    variant="text"
-                    @click="goAdd"
-                    >
-                  Add
-                </v-btn>
-            </v-toolbar-items>
-      </v-app-bar>
-      <v-main >
-        <v-container>
-          <router-view />
-        </v-container>
-      </v-main>  
-    </v-app>
+  <h1>Hello</h1>
+  <v-app>
+    <v-app-bar>
+      <v-app-bar-title>
+        <v-btn variant="text" @click="goHome"> Album </v-btn>
+      </v-app-bar-title>
+      <v-spacer></v-spacer>
+      <v-toolbar-items>
+        <v-btn variant="text" @click="goLogin"> Login </v-btn>
+      </v-toolbar-items>
+      <v-toolbar-items>
+        <v-btn variant="text" @click="goSignup"> Signup </v-btn>
+      </v-toolbar-items>
+    </v-app-bar>
+    <v-main>
+      <v-container>
+        <router-view />
+      </v-container>
+    </v-main>
+  </v-app>
 </template>
 
 <script>
-import logo from './assets/oc-logo-white.png'
 export default {
-  name: 'App',
+  name: "App",
 
-  data: () => ({
-    logo,
-  }),
+  data: () => ({}),
   methods: {
-    goAdd() {
-      this.$router.push({ name: 'add' });
+    goLogin() {
+      this.$router.push({ name: "login" });
+    },
+    goHome() {
+      this.$router.push({ name: "home" });
+    },
+    goSignup() {
+      this.$router.push({ name: "signup" });
     },
-    goList() {
-      this.$router.push({ name: 'tutorials' });
-    }
   },
-
-}
+};
 </script>
 
diff --git a/src/components/LoginDisplay.vue b/src/components/LoginDisplay.vue
new file mode 100644
index 0000000..e69de29
diff --git a/src/router.js b/src/router.js
index 319ef98..1de780b 100644
--- a/src/router.js
+++ b/src/router.js
@@ -2,9 +2,8 @@ import { createWebHistory, createRouter } from "vue-router";
 const routes =  [
   {
     path: "/",
-    alias: "/tutorials",
-    name: "tutorials",
-    component: () => import("./views/TutorialsList.vue")
+    name: "home",
+    component: () => import("./views/Home.vue")
   },
   {
     path: "/edit/:id",
@@ -34,6 +33,18 @@ const routes =  [
     name: "editLesson",
     component: () => import("./views/EditLesson.vue"),
     props: true
+  },
+  {
+    path: "/login",
+    name: "login",
+    component: () => import("./views/LoginScreen.vue"),
+    props:true
+  },
+  {
+    path: "/signup",
+    name: "signup",
+    component: () => import("./views/SignupScreen.vue"),
+    props:true
   }
 ];
 const router = createRouter({
diff --git a/src/services/UserDataService.js b/src/services/UserDataService.js
new file mode 100644
index 0000000..e69de29
diff --git a/src/views/Home.vue b/src/views/Home.vue
new file mode 100644
index 0000000..ee1069a
--- /dev/null
+++ b/src/views/Home.vue
@@ -0,0 +1,28 @@
+<template>
+  <v-container fluid>
+    <v-carousel
+      :continuous="false"
+      :cycle="cycle"
+      :show-arrows="false"
+      v-model="model"
+    >
+      <v-carousel-item v-for="(color, i) in colors" :key="color">
+        <v-sheet :color="color" height="100%" tile>
+          <v-row class="fill-height" align="center" justify="center">
+            <div class="text-h2">Slide {{ i + 1 }}</div>
+          </v-row>
+        </v-sheet>
+      </v-carousel-item>
+    </v-carousel>
+  </v-container>
+</template>
+
+<script>
+export default {
+  data: () => ({
+    model: 0,
+    cycle: true,
+    colors: ["primary", "secondary", "yellow darken-2", "red", "orange"],
+  }),
+};
+</script>
\ No newline at end of file
diff --git a/src/views/LoginScreen.vue b/src/views/LoginScreen.vue
new file mode 100644
index 0000000..9b5dc24
--- /dev/null
+++ b/src/views/LoginScreen.vue
@@ -0,0 +1,49 @@
+<template>
+  <v-container class="grey lighten-5">
+    <v-row align="center" justify="center">
+      <v-col md="6">
+        <v-card class="pa-2" outlined tile>
+          <v-card-title>Login</v-card-title>
+          <v-form ref="form" v-model="valid" lazy-validation>
+            <v-text-field
+              v-model="email"
+              :rules="emailRules"
+              label="E-mail"
+              required
+            ></v-text-field>
+
+            <v-text-field
+              v-model="password"
+              label="Password"
+              required
+            ></v-text-field>
+
+            <v-btn color="primary" @click="login"> Login </v-btn>
+          </v-form>
+        </v-card>
+      </v-col>
+    </v-row>
+  </v-container>
+</template>
+
+<script>
+export default {
+  data: () => ({
+    valid: true,
+    email: "",
+    emailRules: [
+      (v) => !!v || "E-mail is required",
+      (v) => /.+@.+\..+/.test(v) || "E-mail must be valid",
+    ],
+    select: null,
+  }),
+
+  methods: {
+    login() {
+        console.log("Login")
+      // login logic
+      // this.$refs.form.resetValidation()
+    },
+  },
+};
+</script>
\ No newline at end of file
diff --git a/src/views/SignupScreen.vue b/src/views/SignupScreen.vue
new file mode 100644
index 0000000..4d06042
--- /dev/null
+++ b/src/views/SignupScreen.vue
@@ -0,0 +1,56 @@
+<template>
+  <v-container class="grey lighten-5">
+    <v-row align="center" justify="center">
+      <v-col md="6">
+        <v-card class="pa-2" outlined tile>
+          <v-card-title>Signup</v-card-title>
+          <v-form ref="form" v-model="valid" lazy-validation>
+            
+            <v-text-field
+              v-model="name"
+              label="Name"
+              required
+            ></v-text-field>
+
+            <v-text-field
+              v-model="email"
+              :rules="emailRules"
+              label="E-mail"
+              required
+            ></v-text-field>
+
+            <v-text-field
+              v-model="password"
+              label="Password"
+              required
+            ></v-text-field>
+
+            <v-btn color="primary" @click="signup"> Signup </v-btn>
+          </v-form>
+        </v-card>
+      </v-col>
+    </v-row>
+  </v-container>
+</template>
+
+<script>
+export default {
+  data: () => ({
+    valid: true,
+    email: "",
+    emailRules: [
+      (v) => !!v || "E-mail is required",
+      (v) => /.+@.+\..+/.test(v) || "E-mail must be valid",
+    ],
+    select: null,
+  }),
+
+  methods: {
+    signup() {
+        console.log("Signup called")
+      // login logic
+      // this.$refs.form.resetValidation()
+    },
+  },
+};
+</script>
\ No newline at end of file
diff --git a/src/views/TutorialsList.vue b/src/views/TutorialsList.vue
index ff09172..fb7c6cd 100644
--- a/src/views/TutorialsList.vue
+++ b/src/views/TutorialsList.vue
@@ -1,138 +1,5 @@
 <template>
 
     <h1>Tutorial List</h1>
-    <h4>{{ message }}</h4>
-  
-      <v-row >
-        <v-col  cols="12"
-        sm="2">
-          <v-btn color = "success"
-            @click="searchTitle"
-          >
-            Search
-          </v-btn>
-        </v-col>
-        <v-col col="12" sm="10">
-            <v-text-field density="compact" clearable
-              v-model="title"/>
-        </v-col> 
-      </v-row>
-      <v-row>
-        <v-col  cols="9"
-              sm="2">
-            <span class="text-h6">Title</span>
-        </v-col>
-        <v-col  cols="9"
-              sm="4">
-            <span class="text-h6">Description</span>
-        </v-col>
-        <v-col  cols="9"
-              sm="1">
-            <span class="text-h6">Edit</span>
-        </v-col>
-        <v-col  cols="9"
-              sm="1">
-            <span class="text-h6">View</span>
-        </v-col>
-        <v-col  cols="9"
-              sm="1">
-            <span class="text-h6">Delete</span>
-        </v-col>
-      </v-row>
-      <TutorialDisplay
-        v-for="tutorial in tutorials"
-        :key="tutorial.id"
-        :tutorial="tutorial"
-        @deleteTutorial="goDelete(tutorial)"
-        @updateTutorial="goEdit(tutorial)"
-        @viewTutorial="goView(tutorial)"
-    />
- 
-  <v-btn  @click="removeAllTutorials">
-    Remove All
-  </v-btn>
-</template>
-<script>
-import TutorialDataService from "../services/TutorialDataService";
-import TutorialDisplay from '@/components/TutorialDisplay.vue';
-export default {
-  name: "tutorials-list",
-  data() {
-    return {
-      tutorials: [],
-      currentTutorial: null,
-      currentIndex: -1,
-      title: "",
-      message : "Search, Edit or Delete Tutorials"
-    };
-  },
-  components: {
-        TutorialDisplay
-    },
-  methods: {
-    goEdit(tutorial) {
-      this.$router.push({ name: 'edit', params: { id: tutorial.id } });
-    },
-    goView(tutorial) {
-      this.$router.push({ name: 'view', params: { id: tutorial.id } });
-    },
-    goDelete(tutorial) {
-      TutorialDataService.delete(tutorial.id)
-        .then( () => {
-    
-          this.retrieveTutorials()
-        })
-        .catch(e => {
-          this.message = e.response.data.message;
-        });
-    },
-    retrieveTutorials() {
-      TutorialDataService.getAll()
-        .then(response => {
-          this.tutorials = response.data;
-          
-        })
-        .catch(e => {
-          this.message = e.response.data.message;
-        });
-    },
-    refreshList() {
-      this.retrieveTutorials();
-      this.currentTutorial = null;
-      this.currentIndex = -1;
-    },
-    setActiveTutorial(tutorial, index) {
-      this.currentTutorial = tutorial;
-      this.currentIndex = tutorial ? index : -1;
-    },
-    removeAllTutorials() {
-      TutorialDataService.deleteAll()
-        .then(response => {
-          console.log(response.data);
-          this.refreshList();
-        })
-        .catch(e => {
-          this.message = e.response.data.message;
-        });
-    },
-    
-    searchTitle() {
-      TutorialDataService.findByTitle(this.title)
-        .then(response => {
-          this.tutorials = response.data;
-          this.setActiveTutorial(null);
-          
-        })
-        .catch(e => {
-          this.message = e.response.data.message;
-        });
-    }
-  },
-  mounted() {
-    this.retrieveTutorials();
-  }
-};
-</script>
-<style>
-
-</style>
\ No newline at end of file
+   
+</template>
\ No newline at end of file
